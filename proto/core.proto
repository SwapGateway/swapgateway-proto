syntax = "proto3";

package core.swapgateway;

service CoreService {
  rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse) {}
  rpc GetCurrentBalance (GetCurrentBalanceRequest) returns (GetBalanceResponse) {}
  rpc GetHistoryBalance (GetHistoryBalanceRequest) returns (GetBalanceResponse) {}
  rpc GetOneTransaction (GetOneTransactionRequest) returns (GetTransactionsResponse) {}
  rpc GetManyTransactions (GetManyTransactionsRequest) returns (GetTransactionsResponse) {}
  rpc Deposit (DepositRequest) returns (DepositResponse) {}
  rpc Withdraw (WithdrawRequest) returns (WithdrawResponse) {}
  rpc CreateApiKey (CreateApiKeyRequest) returns (CreateApiKeyResponse) {}
  rpc GetApiKeys (GetApiKeysRequest) returns (GetApiKeysResponse) {}
  rpc UpdateApiKey (UpdateApiKeyRequest) returns (UpdateApiKeyResponse) {}
  rpc DeleteApiKey (DeleteApiKeyRequest) returns (DeleteApiKeyResponse) {}
  rpc BuyToken (BuyTokenRequest) returns (BuyTokenResponse) {}
  rpc SellToken (SellTokenRequest) returns (SellTokenResponse) {}
  rpc AddLiquidity (AddLiquidityRequest) returns (AddLiquidityResponse) {}
  rpc RemoveLiquidity (RemoveLiquidityRequest) returns (RemoveLiquidityResponse) {}
  rpc CancelOrder (CancelOrderRequest) returns (CancelOrderResponse) {}
  rpc GetOrders (GetOrdersRequest) returns (GetOrdersResponse) {}
}

message CreateAccountRequest {
  string userid = 1;
}

message CreateAccountResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  string address = 4;
}

message GetCurrentBalanceRequest {
  string userid = 1;
  int32 network = 2;
}

message GetHistoryBalanceRequest {
  string userid = 1;
  int32 network = 2;
  string period = 3;
}

message GetBalanceResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  repeated Balance balance = 5;
}

message Balance {
  string name = 1;
  string symbol = 2;
  string address = 3;
  float balance = 4;
  int32 decimals = 6;
  string logoURI = 7;
}

message GetOneTransactionRequest {
  string userid = 1;
  int32 network = 2;
  string txhash = 3;
}

message GetManyTransactionsRequest {
  string userid = 1;
  int32 network = 2;
  Options options = 4;
}

message Options {
  int32 limit = 1;
  int32 page = 2;
  string sort = 3;
  string orderby = 4;
  string where = 5;
}

message GetTransactionsResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  repeated Transaction transactions = 5;
}

message Transaction {
  string txid = 1;
  string address = 2;
  float amount = 3;
  float fee = 4;
  int32 time = 5;
  int32 timereceived = 6;
  string comment = 7;
  string commentTo = 8;
  string hex = 9;
}

message DepositRequest {
  string userid = 1;
  int32 network = 2;
  string currency = 3;
  float amount = 4;
}

message DepositResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  string qr = 5;
}

message WithdrawRequest {
  string userid = 1;
  int32 network = 2;
  string address = 3;
  string currency = 4;
  float amount = 5;
}

message WithdrawResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  int32 comission = 5;
  string txid = 6;
}

message CreateApiKeyRequest {
  string userid = 1;
  string name = 2;
  repeated string markets = 3;
  repeated string permissions = 4;
}

message CreateApiKeyResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  string name = 4;
  repeated string markets = 5;
  repeated string permissions = 6;
  string apikey = 7;
  string secret_key = 8;
}

message GetApiKeysRequest {
  string userid = 1;
  string name = 2;
}

message GetApiKeysResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  repeated ApiKey apikeys = 4;
}

message ApiKey {
  string apikey = 1;
  string name = 2;
  repeated string markets = 3;
  repeated string permissions = 4;
}

message UpdateApiKeyRequest {
  string userid = 1;
  string apikey = 2;
  string name = 3;
  repeated string markets = 4;
  repeated string permissions = 5;
}

message UpdateApiKeyResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  string apikey = 4;
}

message DeleteApiKeyRequest {
  string userid = 1;
  string apikey = 2;
}

message DeleteApiKeyResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  string apikey = 4;
}

message BuyTokenRequest {
  string userid = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float price = 5;
  float amount = 6;
  float slippage = 7;
  int32 deadline = 8;
}

message BuyTokenResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float price = 7;
  float amount = 8;
  float slippage = 9;
  int32 deadline = 10;
  string orderid = 11;
  string txid = 12;
}

message SellTokenRequest {
  string userid = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float price = 5;
  float amount = 6;
  float slippage = 7;
  int32 deadline = 8;
}

message SellTokenResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float price = 7;
  float amount = 8;
  float slippage = 9;
  int32 deadline = 10;
  string orderid = 11;
  string txid = 12;
}

message AddLiquidityRequest {
  string userid = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float amount = 5;
}

message AddLiquidityResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float amount = 7;
  string orderid = 8;
  string txid = 9;
}

message RemoveLiquidityRequest {
  string userid = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float amount = 5;
}

message RemoveLiquidityResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float amount = 7;
  string orderid = 8;
  string txid = 9;
}

message CancelOrderRequest {
  string userid = 1;
  string orderid = 2;
}

message CancelOrderResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  string orderid = 4;
}

message GetOrdersRequest {
  string userid = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  string orderid = 5;
}

message GetOrdersResponse {
  int32 status = 1;
  repeated string error = 2;
  string userid = 3;
  repeated Order orders = 4;
}

message Order {
  string orderid = 1;
  string market = 2;
  string symbol = 3;
  string side = 4;
  float price = 5;
  float amount = 6;
  float filled = 7;
  float remaining = 8;
  int32 status = 9;
  int32 created_at = 10;
  int32 updated_at = 11;
}