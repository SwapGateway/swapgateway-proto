syntax = "proto3";

package trade.swapgateway;

service TradeService {
  rpc BuyToken (BuyTokenRequest) returns (BuyTokenResponse) {}
  rpc SellToken (SellTokenRequest) returns (SellTokenResponse) {}
  rpc AddLiquidity (AddLiquidityRequest) returns (AddLiquidityResponse) {}
  rpc RemoveLiquidity (RemoveLiquidityRequest) returns (RemoveLiquidityResponse) {}
  rpc CancelOrder (CancelOrderRequest) returns (CancelOrderResponse) {}
  rpc GetOrders (GetOrdersRequest) returns (GetOrdersResponse) {}
}

message BuyTokenRequest {
  string user_id = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float price = 5;
  float amount = 6;
  float slippage = 7;
  int32 deadline = 8;
}

message BuyTokenResponse {
  int32 status = 1;
  repeated string error = 2;
  string user_id = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float price = 7;
  float amount = 8;
  float slippage = 9;
  int32 deadline = 10;
  string orderid = 11;
  string txid = 12;
}

message SellTokenRequest {
  string user_id = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float price = 5;
  float amount = 6;
  float slippage = 7;
  int32 deadline = 8;
}

message SellTokenResponse {
  int32 status = 1;
  repeated string error = 2;
  string user_id = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float price = 7;
  float amount = 8;
  float slippage = 9;
  int32 deadline = 10;
  string orderid = 11;
  string txid = 12;
}

message AddLiquidityRequest {
  string user_id = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float amount = 5;
}

message AddLiquidityResponse {
  int32 status = 1;
  repeated string error = 2;
  string user_id = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float amount = 7;
  string orderid = 8;
  string txid = 9;
}

message RemoveLiquidityRequest {
  string user_id = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  float amount = 5;
}

message RemoveLiquidityResponse {
  int32 status = 1;
  repeated string error = 2;
  string user_id = 3;
  int32 network = 4;
  string market = 5;
  string symbol = 6;
  float amount = 7;
  string orderid = 8;
  string txid = 9;
}

message CancelOrderRequest {
  string user_id = 1;
  string orderid = 2;
}

message CancelOrderResponse {
  int32 status = 1;
  repeated string error = 2;
  string user_id = 3;
  string orderid = 4;
}

message GetOrdersRequest {
  string user_id = 1;
  int32 network = 2;
  string market = 3;
  string symbol = 4;
  string orderid = 5;
}

message GetOrdersResponse {
  int32 status = 1;
  repeated string error = 2;
  string user_id = 3;
  repeated Order orders = 4;
}

message Order {
  string orderid = 1;
  string market = 2;
  string symbol = 3;
  string side = 4;
  float price = 5;
  float amount = 6;
  float filled = 7;
  float remaining = 8;
  int32 status = 9;
  int32 created_at = 10;
  int32 updated_at = 11;
}

